#! /bin/sh
# Copyright (c) 20011 SuSE Linux GmbH, Nuernberg, Germany.
# All rights reserved.
#
# Author: Vladislav Lewin <vlewin@suse.de>
#
# /etc/init.d/rcsms
# /(usr)/sbin/rcsms
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
### BEGIN INIT INFO
# Provides:       rcsms
# Required-Start: $syslog $remote_fs
# Required-Stop:  $syslog $remote_fs
# Default-Start:  3 5
# Default-Stop:   0 1 2 6
# Short-Description: SuSE Media Server
# Description:    start SuSE Media Server
### END INIT INFO

NGINX_BIN=/usr/sbin/nginx
test -x $NGINX_BIN || { echo "$NGINX_BIN not installed";
  if [ "$1" = "stop" ]; then exit 0;
  else exit 5; fi; }

NGINX_CONFIG=/etc/suse-media-server/nginx.conf
test -r $NGINX_CONFIG || { echo "$NGINX_CONFIG not existing";
  if [ "$1" = "stop" ]; then exit 0;
  else exit 6; fi; }

#MDLNA_BIN="/usr/sbin/minidlna"
#MDLNA_CONF="/etc/minidlna.conf"
PID_FILE="/var/run/suse-media-server.pid"
. /etc/rc.status
rc_reset

case "$1" in
  start)
    echo -n "Starting SuSE Media Server "
    grep -q "^[ \\t]*passenger_root[ \\t][ \\t]*`passenger-config --root`;" $NGINX_CONFIG ||
    #sed -i.bak "s#^\\([ \\t]*\\)passenger_root[ \\t].*\$#\\1passenger_root `passenger-config --root`;#" $NGINX_CONFIG

    /sbin/startproc -p $PID_FILE $NGINX_BIN -c $NGINX_CONFIG
    rc_status -v

    if test "$?" -eq 0; then
      IFC=`LC_ALL=C route | grep "^default" | tr -s " " | cut -d " " -f 8`
      IP=`LC_ALL=C ifconfig $IFC | grep "inet addr" | cut -d ":" -f 2 | cut -d " " -f 1`
      PORT=`LC_ALL=C grep "listen" $NGINX_CONFIG|cut -d ";" -f 1|tr -s " "|cut -d " " -f 3`
      if [ -n "$IP" ]; then
        echo -e "\t${done}The SuSE Media Server is running at http://$IP:$PORT/${norm}\n"
      else
        echo -e "\t${warn}SuSE Media Server could not determine the IP address for $IFC${norm}\n"
      fi
   fi

  ;;

  stop)
    echo -n "Shutting down SuSE Media Server "
    /sbin/killproc -TERM -p $PID_FILE $NGINX_BIN
    rc_status -v
  ;;

  try-restart|condrestart)
    if test "$1" = "condrestart"; then
      echo "${attn} Use try-restart ${done}(LSB)${attn} rather than condrestart ${warn}(RH)${norm}"
    fi
    $0 status

    if test $? = 0; then
      $0 restart
    else
      rc_reset
    fi
    rc_status
  ;;

  restart)
    $0 stop
    $0 start
    rc_status
  ;;

  force-reload)
    echo -n "Reload service SuSE Media Server "
    /sbin/killproc -p $PID_FILE -HUP $NGINX_BIN
    rc_status -v
  ;;

  reload)
    echo -n "Reload service SuSE Media Server "
    /sbin/killproc -HUP -p $PID_FILE $NGINX_BIN
    rc_status -v
  ;;

  status)
    echo -n "Checking for service SuSE Media Server "
    /sbin/checkproc -p $PID_FILE $NGINX_BIN
    rc_status -v
  ;;

  probe)
    test $NGINX_CONFIG $PID_FILE && echo reload
  ;;

  *)
    echo "Usage: $0 {start|stop|status|try-restart|restart|force-reload|reload|probe}"
    exit 1
  ;;

esac
rc_exit

